{"ast":null,"code":"var _jsxFileName = \"/Users/fritz/Desktop/IPFS_upload/src/pages/MainPage.js\",\n    _s = $RefreshSig$();\n\nimport classes from './MainPage.module.css';\nimport React, { useState, useEffect, useHistory } from 'react';\nimport { Button, Input } from '@mui/material';\nimport { create } from 'ipfs-http-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MainPage(props) {\n  _s();\n\n  //document.cookie = \"username2=chrome\";\n  const [url, setUrl] = useState(\"\");\n  const hiddenFileInput = React.useRef(null);\n\n  function clickOnHiddenInput(event) {\n    hiddenFileInput.current.click(event);\n  }\n\n  async function uploadToIpfs(event) {\n    const uploadFile = event.target.files[0];\n\n    try {\n      const client = create('https://ipfs.infura.io:5001/api/v0');\n      const added = await client.add(event.target.files[0]);\n      setUrl(`https://ipfs.infura.io/ipfs/${added.path}`);\n    } catch (error) {\n      console.log('Error uploading file: ', error);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.uploadBox,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: hiddenFileInput,\n        id: \"imageInput\",\n        type: \"file\",\n        name: \"file\",\n        onChange: uploadToIpfs,\n        hidden: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: clickOnHiddenInput,\n        variant: \"contained\",\n        children: \"Choose file & upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.succsesfull,\n      children: [url, JSON.parse(JSON.stringify(document.cookie)).usename]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MainPage, \"VxvTMyJ1a+2pwuqJczcqwKXxWTA=\");\n\n_c = MainPage;\nexport default MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["classes","React","useState","useEffect","useHistory","Button","Input","create","MainPage","props","url","setUrl","hiddenFileInput","useRef","clickOnHiddenInput","event","current","click","uploadToIpfs","uploadFile","target","files","client","added","add","path","error","console","log","container","uploadBox","succsesfull","JSON","parse","stringify","document","cookie","usename"],"sources":["/Users/fritz/Desktop/IPFS_upload/src/pages/MainPage.js"],"sourcesContent":["import classes from './MainPage.module.css';\nimport React, {useState,useEffect,useHistory} from 'react';\nimport {Button,Input} from '@mui/material';\nimport { create } from 'ipfs-http-client'\n\nfunction MainPage(props){\n\n\n\n    //document.cookie = \"username2=chrome\";\n\n    const [url,setUrl] = useState(\"\")\n\n\n    const hiddenFileInput = React.useRef(null);\n    function clickOnHiddenInput(event){\n        hiddenFileInput.current.click(event);\n    }\n\n    async function uploadToIpfs(event){\n\n        const uploadFile= event.target.files[0]\n\n        try {\n            const client = create('https://ipfs.infura.io:5001/api/v0')\n            const added = await client.add(event.target.files[0])\n            setUrl(`https://ipfs.infura.io/ipfs/${added.path}`)\n\n          } catch (error) {\n            console.log('Error uploading file: ', error)\n          }\n    }\n\n\n\n    return (\n        <div className={classes.container}>\n\n            <div className={classes.uploadBox}>\n                <input ref={hiddenFileInput} id =\"imageInput\" type=\"file\" name=\"file\" onChange={uploadToIpfs} hidden />\n                <Button onClick={clickOnHiddenInput} variant=\"contained\">{\"Choose file & upload\"}</Button>\n            </div>\n\n            <div className={classes.succsesfull}>\n\n                {url}\n\n                {JSON.parse(JSON.stringify(document.cookie)).usename}\n\n            </div>\n\n        </div>\n    );\n}\n\nexport default MainPage;"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,EAAkCC,UAAlC,QAAmD,OAAnD;AACA,SAAQC,MAAR,EAAeC,KAAf,QAA2B,eAA3B;AACA,SAASC,MAAT,QAAuB,kBAAvB;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;EAAA;;EAIpB;EAEA,MAAM,CAACC,GAAD,EAAKC,MAAL,IAAeT,QAAQ,CAAC,EAAD,CAA7B;EAGA,MAAMU,eAAe,GAAGX,KAAK,CAACY,MAAN,CAAa,IAAb,CAAxB;;EACA,SAASC,kBAAT,CAA4BC,KAA5B,EAAkC;IAC9BH,eAAe,CAACI,OAAhB,CAAwBC,KAAxB,CAA8BF,KAA9B;EACH;;EAED,eAAeG,YAAf,CAA4BH,KAA5B,EAAkC;IAE9B,MAAMI,UAAU,GAAEJ,KAAK,CAACK,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAlB;;IAEA,IAAI;MACA,MAAMC,MAAM,GAAGf,MAAM,CAAC,oCAAD,CAArB;MACA,MAAMgB,KAAK,GAAG,MAAMD,MAAM,CAACE,GAAP,CAAWT,KAAK,CAACK,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAX,CAApB;MACAV,MAAM,CAAE,+BAA8BY,KAAK,CAACE,IAAK,EAA3C,CAAN;IAED,CALH,CAKI,OAAOC,KAAP,EAAc;MACdC,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,KAAtC;IACD;EACN;;EAID,oBACI;IAAK,SAAS,EAAE1B,OAAO,CAAC6B,SAAxB;IAAA,wBAEI;MAAK,SAAS,EAAE7B,OAAO,CAAC8B,SAAxB;MAAA,wBACI;QAAO,GAAG,EAAElB,eAAZ;QAA6B,EAAE,EAAE,YAAjC;QAA8C,IAAI,EAAC,MAAnD;QAA0D,IAAI,EAAC,MAA/D;QAAsE,QAAQ,EAAEM,YAAhF;QAA8F,MAAM;MAApG;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,MAAD;QAAQ,OAAO,EAAEJ,kBAAjB;QAAqC,OAAO,EAAC,WAA7C;QAAA,UAA0D;MAA1D;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAOI;MAAK,SAAS,EAAEd,OAAO,CAAC+B,WAAxB;MAAA,WAEKrB,GAFL,EAIKsB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeC,QAAQ,CAACC,MAAxB,CAAX,EAA4CC,OAJjD;IAAA;MAAA;MAAA;MAAA;IAAA,QAPJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAkBH;;GAhDQ7B,Q;;KAAAA,Q;AAkDT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}