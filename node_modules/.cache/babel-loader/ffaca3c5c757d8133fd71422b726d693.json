{"ast":null,"code":"var _jsxFileName = \"/Users/fritz/Desktop/IPFS_upload/src/pages/MainPage.js\",\n    _s = $RefreshSig$();\n\nimport classes from './MainPage.module.css';\nimport React, { useState, useEffect, useHistory } from 'react';\nimport { Button, Input, ListItemButton, ListItemText, List, ListItemIcon } from '@mui/material';\nimport { create } from 'ipfs-http-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MainPage(props) {\n  _s();\n\n  const [uploads, setUploads] = useState([]); //document.cookie = \"uploads=\";\n\n  function getCookies() {\n    var cookies = document.cookie.split(';').reduce((cookies, cookie) => {\n      const [name, val] = cookie.split('=').map(c => c.trim());\n      cookies[name] = val;\n      return cookies;\n    }, {});\n    return cookies;\n  } // add Upload-Array to Cookie\n\n\n  function addUploads(newUpload) {\n    var uploads = getCookies().uploads || [];\n    if (newUpload === undefined || newUpload === \"\") return;\n    uploads = uploads + \"|\" + newUpload;\n    document.cookie = `uploads=${uploads}`;\n  } // get Upload-Array from Cookie\n\n\n  function getUploads() {\n    var uploads = getCookies().uploads || \"\";\n    return uploads.split(\"|\");\n  } // setUpload State with Upload array from Cookie\n\n\n  useEffect(() => {\n    setUploads(getUploads());\n  }, []);\n  const hiddenFileInput = React.useRef(null);\n\n  function clickOnHiddenInput(event) {\n    hiddenFileInput.current.click(event);\n  }\n\n  async function uploadToIpfs(event) {\n    const uploadFile = event.target.files[0];\n    var addUrl;\n\n    try {\n      const client = create('https://ipfs.infura.io:5001/api/v0');\n      const added = await client.add(event.target.files[0]);\n      addUrl = `https://ipfs.infura.io/ipfs/${added.path}`;\n    } catch (error) {\n      console.log('Error uploading file: ', error);\n    } // add Url Cookie-Array\n\n\n    addUploads(addUrl); // add to State-Array\n\n    setUploads([...uploads, addUrl]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.uploadBox,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: hiddenFileInput,\n        id: \"imageInput\",\n        type: \"file\",\n        name: \"file\",\n        onChange: uploadToIpfs,\n        hidden: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: clickOnHiddenInput,\n        variant: \"contained\",\n        children: \"Choose file & upload to IPFS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.succsesfull\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.allUploads,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.h1,\n        children: \" All Uploads\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        reverse: true,\n        children: uploads.reverse().map(ele => /*#__PURE__*/_jsxDEV(ListItemButton, {\n          component: \"a\",\n          href: ele,\n          target: \"_blank\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: ele\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 104\n          }, this), \"  \", /*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: ele\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 150\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 136\n          }, this), \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 46\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MainPage, \"/1Xmah74VIUzNziIYFW7osQEsbw=\");\n\n_c = MainPage;\nexport default MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["classes","React","useState","useEffect","useHistory","Button","Input","ListItemButton","ListItemText","List","ListItemIcon","create","MainPage","props","uploads","setUploads","getCookies","cookies","document","cookie","split","reduce","name","val","map","c","trim","addUploads","newUpload","undefined","getUploads","hiddenFileInput","useRef","clickOnHiddenInput","event","current","click","uploadToIpfs","uploadFile","target","files","addUrl","client","added","add","path","error","console","log","container","uploadBox","succsesfull","allUploads","h1","reverse","ele"],"sources":["/Users/fritz/Desktop/IPFS_upload/src/pages/MainPage.js"],"sourcesContent":["import classes from './MainPage.module.css';\nimport React, {useState,useEffect,useHistory} from 'react';\nimport {Button,Input,ListItemButton,ListItemText,List,ListItemIcon} from '@mui/material';\n\nimport { create } from 'ipfs-http-client'\n\nfunction MainPage(props){\n\n    const [uploads,setUploads] = useState([])\n\n    //document.cookie = \"uploads=\";\n\n    function getCookies() {\n        var cookies = document.cookie.split(';').reduce(\n            (cookies, cookie) => {\n                const [name, val] = cookie.split('=').map(c => c.trim());\n                cookies[name] = val;\n                return cookies;\n            }, {});\n        return cookies;\n    }\n\n    // add Upload-Array to Cookie\n    function addUploads(newUpload){\n        var uploads =getCookies().uploads || []\n\n        if(newUpload === undefined ||newUpload === \"\") return\n        uploads = uploads + \"|\" + newUpload\n\n        document.cookie = `uploads=${uploads}`\n\n    }\n\n    // get Upload-Array from Cookie\n    function getUploads(){\n        var uploads =getCookies().uploads || \"\"\n        return uploads.split(\"|\")\n    }\n\n    // setUpload State with Upload array from Cookie\n    useEffect(()=>{\n        setUploads(getUploads())\n    },[])\n\n\n    const hiddenFileInput = React.useRef(null);\n    function clickOnHiddenInput(event){\n        hiddenFileInput.current.click(event);\n    }\n\n    async function uploadToIpfs(event){\n\n        const uploadFile= event.target.files[0]\n        var addUrl\n\n        try {\n            const client = create('https://ipfs.infura.io:5001/api/v0')\n            const added = await client.add(event.target.files[0])\n            addUrl = `https://ipfs.infura.io/ipfs/${added.path}`\n        } catch (error) {\n            console.log('Error uploading file: ', error)\n        }\n\n        // add Url Cookie-Array\n        addUploads(addUrl)\n        // add to State-Array\n        setUploads([...uploads,addUrl])\n    }\n\n\n    return (\n        <div className={classes.container}>\n\n            <div className={classes.uploadBox}>\n                <input ref={hiddenFileInput} id =\"imageInput\" type=\"file\" name=\"file\" onChange={uploadToIpfs} hidden />\n                <Button onClick={clickOnHiddenInput} variant=\"contained\">{\"Choose file & upload to IPFS\"}</Button>\n            </div>\n\n            <div className={classes.succsesfull}>\n\n\n            </div>\n\n            <div className={classes.allUploads}>\n\n            <div className={classes.h1}> All Uploads</div>\n\n            <List reverse>\n\n                {uploads.reverse().map(ele=> <ListItemButton component=\"a\" href={ele} target=\"_blank\"> <ListItemText primary={ele} />  <ListItemIcon><img src={ele}/></ListItemIcon>  </ListItemButton>\n\n                )}\n\n\n            </List>\n            </div>\n\n\n\n        </div>\n    );\n}\n\nexport default MainPage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}